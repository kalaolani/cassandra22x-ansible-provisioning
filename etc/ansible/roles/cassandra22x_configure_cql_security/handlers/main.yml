---
- name: nodetool drain restart cassandra
  command: "nodetool -u {{ cassandra22x_remote_jmx_user }} -pw {{ cassandra22x_remote_jmx_pass}} drain"
  when: cassandra22x_cassandra_restart_safe == true

- name: nodetool stopdaemon restart cassandra
  command: "nodetool -u {{ cassandra22x_remote_jmx_user }} -pw {{ cassandra22x_remote_jmx_pass}} stopdaemon"
  register: command_result
  failed_when: "'Cassandra has shutdown.' not in command_result.stdout"
  ignore_errors: yes
  when: cassandra22x_cassandra_restart_safe == true  

- name: stop cassandra service restart cassandra
  command: systemctl stop cassandra
  when: cassandra22x_cassandra_restart_safe == true
  
- name: start cassandra service  restart cassandra
  command: systemctl start cassandra
  when: cassandra22x_cassandra_restart_safe == true
  
- name: nodetool statusbinary restart cassandra
  command: "nodetool -u {{ cassandra22x_remote_jmx_user }} -pw {{ cassandra22x_remote_jmx_pass}} statusbinary"
  register: statusbinary
  until: statusbinary.stdout == "running"
  retries: 60
  delay: 1
  ignore_errors: yes
  when: cassandra22x_cassandra_restart_safe == true  

- name: nodetool statusgossip restart cassandra
  command: "nodetool -u {{ cassandra22x_remote_jmx_user }} -pw {{ cassandra22x_remote_jmx_pass}} statusgossip"
  register: statusgossip
  until: statusgossip.stdout == "running"
  retries: 60
  delay: 1
  ignore_errors: yes
  when: cassandra22x_cassandra_restart_safe == true  

- name: nodetool statushandoff restart cassandra
  command: "nodetool -u {{ cassandra22x_remote_jmx_user }} -pw {{ cassandra22x_remote_jmx_pass}} statushandoff"
  register: statushandoff
  until: statushandoff.stdout == "running" or statushandoff.stdout == "Hinted handoff is running"
  retries: 60
  delay: 1
  ignore_errors: yes
  when: cassandra22x_cassandra_restart_safe == true  

- name: create default cql users
  include_tasks: configure_cql_users.yml
  when: inventory_hostname == ansible_play_hosts[0] and
         cassandra22x_configure_default_cql_users == true
